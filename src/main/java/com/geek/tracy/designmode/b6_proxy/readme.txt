二、结构型设计模式:

6）代理（静态）模式(Proxy Pattern)是一种结构型设计模式，它允许通过使用代理对象来控制对另一个对象的访问。代理对象通常会拦截被代理对象的访问，
并在其间插入额外的逻辑功能或控制。


类结构和设计场景：
静态代理的实现，由抽象接口、被代理对象、代理对象三部分实现，被代理对象和代理对象分别实现了抽象接口的实现方法。代理对象实现构造方法，入参传入具体
被代理对象。客户端调用的时候通过创建代理对象，并传入具体的代理对象来获取具体对象的功能方法实现。




